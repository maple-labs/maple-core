version: 2.1

orbs:
  gcp-cli: circleci/gcp-cli@2.1.0

aliases:
  - &defaults
    docker:
      - image: circleci/node:10
        # environment:
        #   MAPLE_KALEIDO_URL: $MAPLE_KALEIDO_URL
        #   MAPLE_KALEIDO_MNEMONIC: $MAPLE_KALEIDO_MNEMONIC

jobs:
  dependencies:
    <<: *defaults
    steps:
      - run:
          name: Checkout maple-beta-scaffold
          command: GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" git clone git@github.com:maple-labs/maple-beta-scaffold.git .
      - restore_cache:
          key: v1-npm-deps-{{ checksum "~/project/yarn.lock" }}
      - run:
          name: Checkout mbs dependencies
          command: GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" yarn setup
      - run:
          name: Checkout current maple-core branch
          command: cd ~/project/packages/maple-core && git checkout $CIRCLE_BRANCH
      - run:
          name: Install maple-core deps
          command: yarn
      - save_cache:
          paths:
            - ~/usr/local/lib/node_modules # location depends on npm version
          key: v1-npm-deps-{{ checksum "~/project/yarn.lock" }}
      - persist_to_workspace:
          root: ~/project
          paths:
            - "./*"

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/project
      - run:
          name: Run mbs chain
          command: cd ~/project && yarn chain >> /dev/null
          background: true
      - run:
          name: Wait for chain to start
          command: sleep 3
      - run:
          name: Run tests for maple-core
          command: cd ~/project && yarn all:test
      - run:
          name: Stop mbs chain
          command: pkill node
  

  
  deploy_kaleido:
    <<: *defaults
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/project
      # - run:
      #     name: List Environment Variables
      #     command: |
      #       echo $MAPLE_KALEIDO_URL
      #       echo $MAPLE_KALEIDO_MNEMONIC
      # - run:
      #     name: Cat file
      #     command: |
      #       cat .env
      # - run:
      #     name: Update PATH and Define Environment Variable at Runtime
      #     command: |
      #       echo 'export MAPLE_KALEIDO_URL="https://k0eb0l1bwr:NAGmuxR1tN-FEKxFSmNPD1T8hPjVW8UyW9VfJzkQNpQ@k0pchgke6s-k0geod7q6g-rpc.kr0-aws.kaleido.io/"' >> $BASH_ENV
      #       echo 'export MAPLE_MNEMONIC="net arrange patient enter stand stomach rug doctor service giraffe surface path"' >> $BASH_ENV
      #       echo 'export NODE_ENV="private"' >> $BASH_ENV
      #       source $BASH_ENV
      # - run:
      #     name: List env vars
      #     command: cd ~/project/packages/maple-core && yarn test-env
      # - run:
      #     name: Deploy contracts to Kaleido
      #     command: |
      #       echo $MAPLE_KALEIDO_URL
      #       echo $MAPLE_MNEMONIC
      #       cd ~/project && ls -al && yarn kaleido:all:migrate
      # - run:
      #     name: Install google cloud SDK
      #     command: |
      #       echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      #       sudo apt-get install apt-transport-https ca-certificates gnupg
      #       curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
      #       sudo apt-get update && sudo apt-get install google-cloud-sdk
      #       gcloud init
      - run:
            name: check
            command: echo "check"
      

workflows:
  version: 2
  test_all:
    jobs:
      # - dependencies
      # - test:
      #     requires:
      #       - dependencies
      - gcp-cli/install_and_initialize_cli:
          context: google-cloud
          executor: gcp-cli/default
      - deploy_kaleido:
          context: kaleido
          requires:
              # - dependencies
              - gcp-cli/install_and_initialize_cli
          filters:
            branches:
              only:
                - fake-master
