version: 2.1

orbs:
  gcp-cli: circleci/gcp-cli@1

aliases:
  - &defaults
    docker:
      - image: circleci/node:10

jobs:
  dependencies:
    <<: *defaults
    steps:
      # - run:
      #     name: Checkout maple-beta-scaffold
      #     command: GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" git clone git@github.com:maple-labs/maple-beta-scaffold.git .
      # - restore_cache:
      #     key: v1-npm-deps-{{ checksum "~/project/yarn.lock" }}
      # - run:
      #     name: Checkout mbs dependencies
      #     command: GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" yarn setup
      # - run:
      #     name: Checkout current maple-core branch
      #     command: cd ~/project/packages/maple-core && git checkout $CIRCLE_BRANCH
      # - run:
      #     name: Install maple-core deps
      #     command: yarn
      - run:
          name: Install dapp-tools
          command: |
            curl -L https://nixos.org/nix/install | sh
            # . "$HOME/.nix-profile/etc/profile.d/nix.sh"
            # nix-env -iA dapp hevm seth solc -if https://github.com/dapphub/dapptools/tarball/master --substituters https://dapp.cachix.org --trusted-public-keys dapp.cachix.org-1:9GJt9Ja8IQwR7YW/aF0QvCa6OmjGmsKoZIist0dG+Rs=
      # - run:
      #     name: Install smart contract deps
      #     command: dapp update
      # - save_cache:
      #     paths:
      #       - ~/usr/local/lib/node_modules # location depends on npm version
      #     key: v1-npm-deps-{{ checksum "~/project/yarn.lock" }}
      # - persist_to_workspace:
      #     root: ~/project
      #     paths:
      #       - "./*"

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/project
      - run:
          name: Run mbs chain
          command: cd ~/project && yarn chain >> /dev/null
          background: true
      - run:
          name: Wait for chain to start
          command: sleep 3
      - run:
          name: Run tests for maple-core
          command: cd ~/project && yarn all:test
      - run:
          name: Stop mbs chain
          command: pkill node
  
  deploy_kaleido:
    <<: *defaults
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/project
      - run:
          name: Update PATH and Define Environment Variable at Runtime
          command: |
            echo 'export MAPLE_KALEIDO_URL=$MAPLE_KALEIDO_URL' >> $BASH_ENV
            echo 'export MAPLE_MNEMONIC=$MAPLE_MNEMONIC' >> $BASH_ENV
            echo 'export NODE_ENV="private"' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Deploy contracts to Kaleido
          command: |
            echo $MAPLE_KALEIDO_URL
            echo $MAPLE_MNEMONIC
            cd ~/project && yarn kaleido:all:migrate
  
  upload_kaleido_artifacts:
    executor:
      name: gcp-cli/google
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/project
      - gcp-cli/initialize
      - run:
          name: Upload files to gcloud bucket
          command: |
            gsutil -m rsync -r ~/project/packages/contracts/private gs://maple-artifacts/contract-artifacts/kaleido/$CIRCLE_BUILD_NUM
            gsutil -m rsync -r ~/project/packages/contracts/private gs://maple-artifacts/contract-artifacts/kaleido/current

workflows:
  version: 2
  test_all:
    jobs:
      - dependencies
      - test:
          requires:
            - dependencies
      - gcp-cli/install_and_initialize_cli:
          context: google-cloud
          executor: gcp-cli/default
      - deploy_kaleido:
          context: kaleido
          requires:
              - dependencies
              - test
          filters:
            branches:
              only:
                - master
      - upload_kaleido_artifacts:
          context: google-cloud
          requires:
              - dependencies
              - test
              - deploy_kaleido
          filters:
            branches:
              only:
                - master
